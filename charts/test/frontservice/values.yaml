# Default values for microservice.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
nameOverride: ""
fullnameOverride: ""

replicaCount: 1

image:
  repository: harbor.zfmgr.top/library/nginx
  tag: 1.18-alpine
  pullPolicy: IfNotPresent

imagePullSecrets:
  - name: "harborcred"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

env: 
  - name: TZ
    value: Asia/Shanghai
  
resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 0.1
    memory: 128Mi
  requests:
    cpu: 0.1
    memory: 128Mi

startupProbe:
  httpGet:
    path: /
    port: 80
  failureThreshold: 30
  periodSeconds: 3
  initialDelaySeconds: 5
livenessProbe:
  httpGet:
    path: /
    port: 80
  periodSeconds: 3
  failureThreshold: 1
readinessProbe:
  httpGet:
    path: /
    port: 80
  timeoutSeconds: 3
  periodSeconds: 3
  successThreshold: 3

nodeSelector: {}

tolerations: []

affinity: {}
